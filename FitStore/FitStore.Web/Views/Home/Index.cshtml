@model PagingElementViewModel<HomeIndexViewModel>

@{
    ViewData["Title"] = "Home";
}

<div class="container-fluid">
    <div class="row">
        <div class="col-md-2">
            <br />
            <br />

            @foreach (var category in Model.Element.Categories)
            {
                <ul class="nav nav-pills nav-stacked">
                    <li id="home-category-link"><a asp-area="" asp-controller="Categories" asp-action="Details" asp-route-id="@category.Id" asp-route-name="@category.Name">@category.Name</a></li>
                    @foreach (var subcategory in category.Subcategories)
                    {
                        <li id="home-subcategory-link"><a asp-area="" asp-controller="Subcategories" asp-action="Details" asp-route-id="@subcategory.Id" asp-route-name="@subcategory.Name" class="col-md-offset-2">@subcategory.Name</a></li>
                    }
                </ul>
            }
        </div>

        <div class="col-md-offset-1 col-md-9">
            <br />
            <br />
            @foreach (var supplement in Model.Element.Supplements)
            {
                await Html.RenderPartialAsync("_HomeSupplement", supplement);
            }
        </div>
    </div>
</div>

<div class="text-center">
    @if (Model.Pagination.TotalPages > 1)
    {
        string actionLink = string.IsNullOrWhiteSpace(Model.SearchToken)
           ? $"/home/index?"
           : $"/home/index?SearchToken={Model.SearchToken}&";

        Model.Pagination.ActionLink = actionLink;

        @Html.Partial("_Pagination", Model.Pagination)
    }
</div>